{"version":3,"sources":["store/Books/book.actions.ts","components/organisms/header/Header.styles.tsx","components/molecules/search/Search.styles.tsx","components/molecules/search/Search.tsx","components/organisms/header/Header.tsx","components/organisms/booksTable/BooksTable.tsx","services/BooksApiClient.ts","pages/Home/Home.styles.tsx","pages/Home/Home.tsx","services/hooks/useGetBookService.ts","constants/Books.ts","store/Books/book.reducer.ts","store/index.ts","ErrorBoundary/ErrorBoundary.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BooksActionTypesEnum","Container","styled","div","SearchWrapper","theme","position","marginRight","marginLeft","borderRadius","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","zIndex","InputBase","Input","border","background","paddingLeft","transition","transitions","create","BooksActions","payload","action","UPDATE_BOOKS","SEARCH_BOOKS","Search","onChangeInput","dispatch","useDispatch","debouncedChangeHandler","useCallback","debounce","input","target","value","sx","color","placeholder","onChange","disableUnderline","Header","Typography","variant","event","BooksTable","books","useSelector","state","booksRepo","TableContainer","marginTop","component","Paper","Table","minWidth","TableHead","TableRow","map","header","index","TableCell","align","TableBody","book","scope","book_title","authors","book_author","reduce","previousValue","author","book_publication_year","book_publication_country","book_publication_city","book_pages","id","BooksApiClient","axiosInstance","baseURL","responseBody","response","data","this","axios","body","a","post","then","_instance","BooksService","getInstance","PageContainer","LoadWrapper","DataGrid","Home","navigate","useNavigate","pageNumberParam","useParams","useState","loading","setLoading","getBooksByPageAndFilter","page","filters","getBooks","itemsPerPage","count","catch","_","useGetBookService","search","numberOfPages","Math","round","pageNumberURLInt","parseInt","useEffect","type","values","Pagination","defaultPage","size","CircularProgress","bookReducer","createReducer","handleType","rootReducer","combineReducers","store","createStore","composeWithDevTools","ErrorBoundary","hasError","errorMessage","error","setState","name","message","props","children","React","PureComponent","App","style","flex","flexDirection","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee85fc63.chunk.js","sourcesContent":["import { action, PayloadAction } from 'typesafe-actions';\r\nimport { BookModel } from '../../models/BookModel';\r\n\r\nexport enum BooksActionTypesEnum {\r\n  UPDATE_BOOKS = 'UPDATE_BOOKS',\r\n  SEARCH_BOOKS = 'SEARCH_BOOKS',\r\n}\r\n\r\nconst updateBooks = (payload: {\r\n  page: number;\r\n  count: number;\r\n  books: BookModel[];\r\n}): PayloadAction<\r\n  BooksActionTypesEnum.UPDATE_BOOKS,\r\n  { page: number; count: number; books: BookModel[] }\r\n> => action(BooksActionTypesEnum.UPDATE_BOOKS, payload);\r\n\r\nconst searchBooks = (\r\n  payload: string\r\n): PayloadAction<BooksActionTypesEnum.SEARCH_BOOKS, string> =>\r\n  action(BooksActionTypesEnum.SEARCH_BOOKS, payload);\r\n\r\nexport const BooksActions = { updateBooks, searchBooks };\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 4em;\r\n  background-color: #f4f1ea;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n","import { Input, styled } from '@mui/material';\r\n\r\nexport const SearchWrapper = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  marginRight: '2em',\r\n  marginLeft: 0,\r\n  borderRadius: '2em',\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}));\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  zIndex: 1,\r\n}));\r\n\r\nexport const InputBase = styled(Input)(({ theme }) => ({\r\n  border: '#DCD6CC 1px solid',\r\n  background: '#FFFFFF',\r\n  borderRadius: '1em',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n        border: '0px',\r\n      },\r\n    },\r\n  },\r\n  '&:after': {\r\n    border: '0px',\r\n  },\r\n}));\r\n","import * as Styled from './Search.styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ChangeEvent, useCallback } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BooksActions } from '../../../store/Books/book.actions';\r\n\r\ninterface SearchProps {\r\n  onChangeInput: (\r\n    input: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => void;\r\n}\r\n\r\nexport const Search = ({ onChangeInput }: SearchProps): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const changeInputHandler = (\r\n    input: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    dispatch(BooksActions.searchBooks(input.target.value));\r\n  };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedChangeHandler = useCallback(\r\n    debounce(changeInputHandler, 300),\r\n    []\r\n  );\r\n  return (\r\n    <Styled.SearchWrapper>\r\n      <Styled.SearchIconWrapper>\r\n        <SearchIcon sx={{ color: '#000000' }} />\r\n      </Styled.SearchIconWrapper>\r\n      <Styled.InputBase\r\n        placeholder={'Search books'}\r\n        onChange={debouncedChangeHandler}\r\n        disableUnderline\r\n      />\r\n    </Styled.SearchWrapper>\r\n  );\r\n};\r\n","import * as Styled from './Header.styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { ChangeEvent } from 'react';\r\nimport { Search } from '../../molecules/search';\r\n\r\nexport const Header = (): JSX.Element => {\r\n  const handleOnSearch = (\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ): void => {};\r\n  return (\r\n    <Styled.Container>\r\n      <Typography sx={{ marginLeft: '2em' }} alignItems={'left'} variant={'h6'}>\r\n        {'Books Wonderland'}\r\n      </Typography>\r\n      <Search onChangeInput={handleOnSearch} />\r\n    </Styled.Container>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { BookModel } from '../../../models/BookModel';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\n\r\nexport const BooksTable = (): JSX.Element => {\r\n  const books = useSelector(\r\n    (state: RootState): BookModel[] => state.booksRepo.books\r\n  );\r\n\r\n  const headerLabels: string[] = [\r\n    'title',\r\n    'authors',\r\n    'year',\r\n    'country',\r\n    'city',\r\n    'pages',\r\n  ];\r\n\r\n  const formatBookAuthors = (authors: string[]): string => {\r\n    return authors.reduce(\r\n      (previousValue, author) => previousValue + `${author}\\n`,\r\n      ''\r\n    );\r\n  };\r\n  return (\r\n    <TableContainer sx={{ marginTop: '2em' }} component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {headerLabels.map((header, index) => (\r\n              <TableCell key={`row-${index}-${header}`} align='center'>\r\n                {header}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {books.map((book, index) => (\r\n            <TableRow\r\n              key={`row-${index}-${book.id}`}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell\r\n                key={`row-${index}-${book.book_title}`}\r\n                align='left'\r\n                component='th'\r\n                scope='row'\r\n              >\r\n                {book.book_title}\r\n              </TableCell>\r\n              <TableCell\r\n                key={`row-${index}-${book.book_author}`}\r\n                align='center'\r\n              >\r\n                {formatBookAuthors(book.book_author)}\r\n              </TableCell>\r\n              <TableCell\r\n                key={`row-${index}-${book.book_publication_year}`}\r\n                align='center'\r\n              >\r\n                {book.book_publication_year}\r\n              </TableCell>\r\n              <TableCell\r\n                key={`row-${index}-${book.book_publication_country}`}\r\n                align='center'\r\n              >\r\n                {book.book_publication_country}\r\n              </TableCell>\r\n              <TableCell\r\n                key={`row-${index}-${book.book_publication_city}`}\r\n                align='center'\r\n              >\r\n                {book.book_publication_city}\r\n              </TableCell>\r\n              <TableCell key={`row-${index}-${book.book_pages}`} align='center'>\r\n                {book.book_pages}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\r\nimport { GetBooksRequestModel } from '../models/GetBooksRequestModel';\r\nimport { GetBooksResponseModel } from '../models/GetBooksResponseModel';\r\n\r\nclass BooksApiClient {\r\n  private static _instance = new BooksApiClient();\r\n  protected readonly axiosInstance: AxiosInstance;\r\n  private readonly baseURL = 'http://nyx.vima.ekt.gr:3000/api';\r\n\r\n  public constructor() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: this.baseURL,\r\n    });\r\n  }\r\n\r\n  static getInstance(): BooksApiClient {\r\n    return this._instance;\r\n  }\r\n\r\n  private responseBody = (response: AxiosResponse) => response.data;\r\n\r\n  async getBooks(body: GetBooksRequestModel): Promise<GetBooksResponseModel> {\r\n    return this.axiosInstance\r\n      .post('/books', body)\r\n      .then((response) => this.responseBody(response) as GetBooksResponseModel);\r\n  }\r\n}\r\n\r\nexport const BooksService = BooksApiClient.getInstance();\r\n","import styled from 'styled-components';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nexport const PageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-top: 2em;\r\n  background-color: white;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BooksGrid = styled(DataGrid)`\r\n  width: 90%;\r\n  margin-top: 7em;\r\n`;\r\n\r\nexport const LoadWrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: 2;\r\n`;\r\n","import Pagination from '@mui/material/Pagination';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { BooksTable } from '../../components/organisms/booksTable';\r\nimport { useGetBookService } from '../../services/hooks/useGetBookService';\r\nimport * as Styled from './Home.styles';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { itemsPerPage } from '../../constants/Books';\r\nimport { FiltersModel } from './../../models/FiltersModel';\r\n\r\nexport const Home: React.FC<{}> = (): JSX.Element => {\r\n  const navigate = useNavigate();\r\n\r\n  const { id: pageNumberParam } = useParams();\r\n\r\n  const { getBooksByPageAndFilter, loading } = useGetBookService();\r\n\r\n  const count = useSelector(\r\n    (state: RootState): number => state.booksRepo.count\r\n  );\r\n  const search = useSelector(\r\n    (state: RootState): string => state.booksRepo.search\r\n  );\r\n\r\n  const numberOfPages = Math.round(count / itemsPerPage);\r\n  const pageNumberURLInt = parseInt(pageNumberParam || '1');\r\n\r\n  const handleOnChangePagination = (\r\n    event: React.ChangeEvent<unknown>,\r\n    page: number\r\n  ) => {\r\n    navigate('/page/' + page);\r\n  };\r\n\r\n  const getFilters = (): FiltersModel[] => {\r\n    if (search === '') {\r\n      return [];\r\n    } else {\r\n      return [\r\n        {\r\n          type: 'all',\r\n          values: [search],\r\n        },\r\n      ];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBooksByPageAndFilter(pageNumberURLInt, getFilters());\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pageNumberParam, search]);\r\n\r\n  return (\r\n    <Styled.PageContainer>\r\n      <Pagination\r\n        defaultPage={pageNumberURLInt}\r\n        count={numberOfPages}\r\n        size='large'\r\n        onChange={handleOnChangePagination}\r\n      />\r\n      <BooksTable />\r\n      {loading && (\r\n        <Styled.LoadWrapper>\r\n          <CircularProgress />\r\n        </Styled.LoadWrapper>\r\n      )}\r\n    </Styled.PageContainer>\r\n  );\r\n};\r\n","import { FiltersModel } from './../../models/FiltersModel';\r\nimport { BooksService } from '../BooksApiClient';\r\nimport { GetBooksResponseModel } from '../../models/GetBooksResponseModel';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BooksActions } from '../../store/Books/book.actions';\r\nimport { useState } from 'react';\r\nimport { itemsPerPage } from '../../constants/Books';\r\n\r\nexport const useGetBookService = () => {\r\n  const [loading, setLoading] = useState<Boolean>(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const getBooksByPageAndFilter = (page: number, filters?: FiltersModel[]) => {\r\n    setLoading(true);\r\n\r\n    BooksService.getBooks({ page, itemsPerPage, filters })\r\n      .then((response: GetBooksResponseModel) => {\r\n        dispatch(\r\n          BooksActions.updateBooks({\r\n            page,\r\n            books: response.books,\r\n            count: response.count,\r\n          })\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((_) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  return { getBooksByPageAndFilter, loading };\r\n};\r\n","export const itemsPerPage = 10;\r\n","import { ActionType, createReducer } from 'typesafe-actions';\r\nimport { BookStateModel } from './../../models/BookStateModel';\r\nimport { BooksActions, BooksActionTypesEnum } from './book.actions';\r\n\r\nconst initialState: BookStateModel = {\r\n  books: [],\r\n  page: 0,\r\n  count: 0,\r\n  search: '',\r\n};\r\n\r\nexport const bookReducer = createReducer<\r\n  Readonly<BookStateModel>,\r\n  ActionType<typeof BooksActions>\r\n>(initialState)\r\n  .handleType(BooksActionTypesEnum.UPDATE_BOOKS, (state, { payload }) => ({\r\n    ...state,\r\n    books: payload.books,\r\n    page: payload.page,\r\n    count: payload.count,\r\n  }))\r\n  .handleType(\r\n    BooksActionTypesEnum.SEARCH_BOOKS,\r\n    (state, { payload: search }) => ({\r\n      ...state,\r\n      search,\r\n    })\r\n  );\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { BookStateModel } from '../models/BookStateModel';\r\nimport { bookReducer } from './Books/book.reducer';\r\n\r\nexport interface RootState {\r\n  booksRepo: BookStateModel;\r\n}\r\n\r\nexport const rootReducer = combineReducers<RootState>({\r\n  booksRepo: bookReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.PureComponent<\r\n  {},\r\n  { hasError: boolean; errorMessage?: string }\r\n> {\r\n  state = { hasError: false, errorMessage: '' };\r\n  componentDidCatch(error: Error) {\r\n    this.setState({\r\n      hasError: true,\r\n      errorMessage: `${error.name}\\n${error.message}\\n`,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import './App.css';\nimport React from 'react';\nimport { Header } from './components/organisms/header';\nimport { Home } from './pages/Home';\nimport { Route, BrowserRouter, Routes } from 'react-router-dom';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\n          <Header />\n          <BrowserRouter>\n            <Routes>\n              <Route path={'/'} element={<Home />}></Route>\n              <Route path={'/page/:id'} element={<Home />} />\n            </Routes>\n          </BrowserRouter>\n        </div>\n      </Provider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}